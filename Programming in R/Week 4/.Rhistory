ls
set.seed(1)
rpois(5, 2)
best("SC", "heart attack")
source('~/datasciencecoursera/Programming in R/Week 4/best.R')
source('~/datasciencecoursera/Programming in R/Week 4/rankhospital.R')
best("SC", "heart attack")
best("SC", "heart attack")
setwd("~/datasciencecoursera/Programming in R/Week 4")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
source('~/datasciencecoursera/Programming in R/Week 4/rankall.R')
source('~/datasciencecoursera/Programming in R/Week 4/rankall.R')
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
hosp_data <- read.csv("outcome-of-care-measures.csv")
x <- hosp_data[, c(2,7,11)]
data_list <- split(x, x$State)
ordered_list <- lapply(data_list, function(x)
{
x[, 3] <- as.numeric(x[, 3])
x <- x[complete.cases(x), ]
x <- x[order(x$Hospital.Name, na.last = TRUE), ]
ranking <- rank(x[, 3], ties.method = "first")
x$Rank <- as.factor(ranking)
x <- x[order(x$Rank, na.last = TRUE), ]
if(num == "best")
return(x[x$Rank == 1, 1])
else if(num == "worst")
return(x[nrow(x), 1])
else if(num > nrow(x))
return(NA)
else
return(x[x$Rank == num, 1])
})
ordered_list <- lapply(data_list, function(x)
{
x[, 3] <- as.numeric(x[, 3])
x <- x[complete.cases(x), ]
x <- x[order(x$Hospital.Name, na.last = TRUE), ]
ranking <- rank(x[, 3], ties.method = "first")
x$Rank <- as.factor(ranking)
x <- x[order(x$Rank, na.last = TRUE), ]
# if(num == "best")
#   return(x[x$Rank == 1, 1])
#
# else if(num == "worst")
#   return(x[nrow(x), 1])
#
# else if(num > nrow(x))
#   return(NA)
#
# else
#   return(x[x$Rank == num, 1])
})
View(ordered_list)
ordered_list[["HI"]][["Hospital.Name"]]
source('~/datasciencecoursera/Programming in R/Week 4/rankall.R')
x <- hosp_data[, c(2,7,23)]
data_list <- split(x, x$State)
ordered_list <- lapply(data_list, function(x)
{
x[, 3] <- as.numeric(x[, 3])
x <- x[complete.cases(x), ]
x <- x[order(x$Hospital.Name, na.last = TRUE), ]
ranking <- rank(x[, 3], ties.method = "first")
x$Rank <- as.factor(ranking)
x <- x[order(x$Rank, na.last = TRUE), ]
# if(num == "best")
#   return(x[x$Rank == 1, 1])
#
# else if(num == "worst")
#   return(x[nrow(x), 1])
#
# else if(num > nrow(x))
#   return(NA)
#
# else
#   return(x[x$Rank == num, 1])
})
View(ordered_list)
ordered_list[["NJ"]][["Hospital.Name"]]
x <- hosp_data[, c(2,7,23)]
data_list <- split(x, x$State)
ordered_list <- lapply(data_list, function(x)
{
x[, 3] <- as.numeric(x[, 3])
x <- x[complete.cases(x), ]
x <- x[order(x$Hospital.Name, na.last = TRUE), ]
ranking <- rank(x[, 3], ties.method = "first")
x$Rank <- as.factor(ranking)
x <- x[order(x$Rank, na.last = TRUE), ]
# if(num == "best")
#   return(x[x$Rank == 1, 1])
#
# else if(num == "worst")
#   return(x[nrow(x), 1])
#
# else if(num > nrow(x))
#   return(NA)
#
# else
#   return(x[x$Rank == num, 1])
})
View(ordered_list)
ordered_list[["NJ"]][["Hospital.Name"]]
ordered_list[["NJ"]][["Rank"]]
ordered_list[["NJ"]][["Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]]
x <- hosp_data[, c(2,7,17)]
data_list <- split(x, x$State)
ordered_list <- lapply(data_list, function(x)
{
x[, 3] <- as.numeric(x[, 3])
x <- x[complete.cases(x), ]
x <- x[order(x$Hospital.Name, na.last = TRUE), ]
ranking <- rank(x[, 3], ties.method = "first")
x$Rank <- as.factor(ranking)
x <- x[order(x$Rank, na.last = TRUE), ]
# if(num == "best")
#   return(x[x$Rank == 1, 1])
#
# else if(num == "worst")
#   return(x[nrow(x), 1])
#
# else if(num > nrow(x))
#   return(NA)
#
# else
#   return(x[x$Rank == num, 1])
})
View(ordered_list)
ordered_list <- lapply(data_list, function(x)
{
x[, 3] <- as.numeric(x[, 3])
x <- x[complete.cases(x), ]
x <- x[order(x$Hospital.Name, na.last = TRUE), ]
ranking <- rank(x[, 3], ties.method = "first")
x$Rank <- as.factor(ranking)
x <- x[order(x$Rank, na.last = TRUE), ]
# if(num == "best")
#   return(x[x$Rank == 1, 1])
#
# else if(num == "worst")
#   return(x[nrow(x), 1])
#
# else if(num > nrow(x))
#   return(NA)
#
# else
#   return(x[x$Rank == num, 1])
})
ordered_list <- lapply(data_list, function(x)
{
x[, 3] <- as.numeric(x[, 3])
x <- x[complete.cases(x), ]
x <- x[order(x$Hospital.Name, na.last = TRUE), ]
ranking <- rank(x[, 3], ties.method = "first")
x$Rank <- as.factor(ranking)
x <- x[order(x$Rank, na.last = TRUE), ]
# if(num == "best")
#   return(x[x$Rank == 1, 1])
#
# else if(num == "worst")
#   return(x[nrow(x), 1])
#
# else if(num > nrow(x))
#   return(NA)
#
# else
#   return(x[x$Rank == num, 1])
})
View(ordered_list)
ordered_list[["NV"]][["Hospital.Name"]]
x <- hosp_data[, c(2,7,11)]
data_list <- split(x, x$State)
ordered_list <- lapply(data_list, function(x)
{
x[, 3] <- as.numeric(x[, 3])
x <- x[complete.cases(x), ]
x <- x[order(x$Hospital.Name, na.last = TRUE), ]
ranking <- rank(x[, 3], ties.method = "first")
x$Rank <- as.factor(ranking)
x <- x[order(x$Rank, na.last = TRUE), ]
# if(num == "best")
#   return(x[x$Rank == 1, 1])
#
# else if(num == "worst")
#   return(x[nrow(x), 1])
#
# else if(num > nrow(x))
#   return(NA)
#
# else
#   return(x[x$Rank == num, 1])
})
x <- hosp_data[, c(2,7,17)]
data_list <- split(x, x$State)
source('~/datasciencecoursera/Programming in R/Week 4/rankall.R')
ordered_list <- lapply(data_list, function(x)
{
x[, 3] <- as.numeric(x[, 3])
x <- x[complete.cases(x), ]
x <- x[order(x$Hospital.Name, na.last = TRUE), ]
ranking <- rank(x[, 3], ties.method = "first")
x$Rank <- as.factor(ranking)
x <- x[order(x$Rank, na.last = TRUE), ]
# if(num == "best")
#   return(x[x$Rank == 1, 1])
#
# else if(num == "worst")
#   return(x[nrow(x), 1])
#
# else if(num > nrow(x))
#   return(NA)
#
# else
#   return(x[x$Rank == num, 1])
})
View(ordered_list)
ordered_list[["NV"]][["Hospital.Name"]]
ordered_list[["NV"]][["Rank"]]
ordered_list[["NV"]][["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]]
x <- hosp_data[, c(2,7,23)]
data_list <- split(x, x$State)
ordered_list <- lapply(data_list, function(x)
{
x[, 3] <- as.numeric(x[, 3])
x <- x[complete.cases(x), ]
x <- x[order(x$Hospital.Name, na.last = TRUE), ]
ranking <- rank(x[, 3], ties.method = "first")
x$Rank <- as.factor(ranking)
x <- x[order(x$Rank, na.last = TRUE), ]
# if(num == "best")
#   return(x[x$Rank == 1, 1])
#
# else if(num == "worst")
#   return(x[nrow(x), 1])
#
# else if(num > nrow(x))
#   return(NA)
#
# else
#   return(x[x$Rank == num, 1])
})
View(ordered_list)
ordered_list[["NJ"]][["Hospital.Name"]]
