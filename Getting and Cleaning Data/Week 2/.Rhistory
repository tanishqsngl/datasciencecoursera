ls
set.seed(1)
rpois(5, 2)
source("https://bioconductor.org/bioclite.R")
source("http://bioconductor.org/biocLite.R")
?BiocUpgrade
source("https://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
biocLite("rhdf5")
library(rhdf5)
created = h5createfile("example.h5")
created = h5createFile("example.h5")
created
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5", "foo/A")
B = array(seq(0.1, 2.0, by=0.1), dim=c(5, 2, 2))
attr(B, "scale") <- "liter"
h5write(B, "example.h5", "foo/foobaa/B")
h5ls("example.h5")
setwd("~/datasciencecoursera/Getting and Cleaning Data/Week 2")
df = data.frame(1L:5L, seq(0, 1, length.out = 5), c("ab", "cde", "fghi", "a", "s"), stringsAsFactors = FALSE)
h5write(df, "example.h5", "df")
h5ls("example.h5")
B = array(seq(0.1, 2.0, by=0.1), dim=c(5, 2, 2))
h5write(B, "example.h5", "foo/foobaa/B")
library(rhdf5)
created = h5createfile("example.h5")
biocLite("rhdf5")
library(rhdf5)
h5write(B, "example.h5", "foo/foobaa/B")
created = h5createfile("example.h5")
created = h5createfile("example.h5")
created = h5createFile("example.h5")
h5write(B, "example.h5", "foo/foobaa/B")
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5", "foo/A")
B = array(seq(0.1, 2.0, by=0.1), dim=c(5, 2, 2))
attr(B, "scale") <- "liter"
h5write(B, "example.h5", "foo/foobaa/B")
h5ls("example.h5")
readA = h5read("example.h5", "foo/A")
readB = h5read("example.h5", "foo/foobaa/B")
readdf = h5read("example.h5", "df")
readA
h5write(c(12, 13, 14), "example.h5", "foo/A", index=list(1:3, 1))
h5r
h5read("example.h5", "foo/A")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "f82384f8f0b204d1a1ff",
secret = "d94c31258b6e4453b8ba95fe5d6acac0089516b9"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "f82384f8f0b204d1a1ff",
secret = "d94c31258b6e4453b8ba95fe5d6acac0089516b9"
)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
fileUrl -> "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileurl, destfile = "acs,csv", method = "curl")
download.file(fileUrl, destfile = "acs,csv", method = "curl")
download.file(fileUrl, destfile = "acs,csv")
download.file(fileUrl, destfile = "acs.csv")
acs <- read.csv("acs.csv")
library(sqldf)
install.packages(sqldf)
"sqldf"
install.packages(sqldf)
install.packages("sqldf")
unique(acs$AGEP)
sqldf("select distinct pwgtp1 from acs")
library(sqldf)
sqldf("select distinct pwgtp1 from acs")
sqldf("select distinct AGEP from acs")
sqldf("select unique AGEP from acs")
sqldf("select AGEP where unique from acs")
sqldf("select * from acs where AGEP \lt< 50 and pwgtp1")
sqldf("select pwgtp1 from acs")
sqldf("select pwgtp1 from acs where AGEP \lt< 50")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs where AGEP < 50")
head(sqldf("select pwgtp1 from acs where AGEP < 50"))
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode = readLines(con)
close(con)
htmlcode
?nchar
x <- htmlcode[c(10,20,30,100)]
x
nchar(x)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", destfile = data.for)
download.file("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", destfile = data.for)
download.file("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", destfile = "data.for")
data_for <- read.fortran(data.for)
data_for <- read.fortran("data.for")
?read.fortran
data_for <- read.fortran("data.for", F2.1)
data_for <- read.fortran("data.for", format = c("F2.1"))
data_for <- read.fortran("data.for", format = c("F7.1"))
